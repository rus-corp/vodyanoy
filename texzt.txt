Чтобы фильтровать данные на странице исходя из значения поля price_segment, вы можете использовать параметры запроса в Django.

Шаг 1: Измените ваше представление Django для обработки параметров фильтрации.

python
Copy code
from django.shortcuts import render
from .models import Manufacturer

def manufacturer_list(request):
    # Получаем параметры фильтрации из запроса
    price_segment = request.GET.get('price_segment')

    # Фильтруем данные в соответствии с параметрами
    manufacturers = Manufacturer.objects.all()
    if price_segment:
        manufacturers = manufacturers.filter(price_segment=price_segment)

    return render(request, 'manufacturer_list.html', {'manufacturers': manufacturers})
Шаг 2: В вашем шаблоне manufacturer_list.html отображайте отфильтрованные данные.

html
Copy code
<ul>
  {% for manufacturer in manufacturers %}
  <li>
    {{ manufacturer.name }} - {{ manufacturer.price_segment }}
  </li>
  {% endfor %}
</ul>
Шаг 3: В вашем шаблоне, где находится ваш чекбокс, добавьте атрибут name и значение, которое соответствует параметру запроса.

html
Copy code
<form method="GET">
  <input type="checkbox" name="price_segment" value="econom"> Эконом
  <input type="checkbox" name="price_segment" value="middle"> Средний
  <input type="checkbox" name="price_segment" value="premium"> Премиум
  <button type="submit">Применить фильтр</button>
</form>
При отправке формы, выбранные значения чекбоксов будут передаваться в параметры запроса, и представление Django будет использовать эти параметры для фильтрации данных. Таким образом, вы получите отфильтрованный список производителей в соответствии с выбранными чекбоксами.



User
я могу обойтись без <button type="submit">Применить фильтр</button> ?
ChatGPT
Да, вы можете обойтись без кнопки "Применить фильтр", чтобы автоматически применять фильтр при изменении состояния чекбоксов. Для этого вам нужно использовать JavaScript для обнаружения изменений в чекбоксах и автоматической отправки формы.

Вот как это можно сделать:

html
Copy code
<form id="filterForm" method="GET">
  <input type="checkbox" name="price_segment" value="econom"> Эконом
  <input type="checkbox" name="price_segment" value="middle"> Средний
  <input type="checkbox" name="price_segment" value="premium"> Премиум
</form>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const filterForm = document.getElementById('filterForm');
  const checkboxes = filterForm.querySelectorAll('input[type="checkbox"]');

  checkboxes.forEach(function(checkbox) {
    checkbox.addEventListener('change', function() {
      filterForm.submit(); // Автоматическая отправка формы при изменении состояния чекбоксов
    });
  });
});
</script>
Этот скрипт будет автоматически отправлять форму при изменении состояния любого чекбокса в форме. После отправки формы, запрос будет содержать параметры фильтрации, соответствующие выбранным чекбоксам, и представление Django будет использовать эти параметры для фильтрации данных.