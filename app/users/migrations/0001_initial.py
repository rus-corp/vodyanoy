# Generated by Django 4.2 on 2024-04-18 15:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=180, verbose_name='Юзернейм')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=30, unique=True, verbose_name='Телефон клиента')),
                ('first_name', models.CharField(max_length=180, verbose_name='Имя клиента')),
                ('last_name', models.CharField(max_length=180, verbose_name='Фамилия клиента')),
                ('status', models.CharField(choices=[('Physic', 'Физик'), ('Legal', 'Юрик'), ('Installer', 'Монтажник'), ('Developer', 'Застройщик')], default=('Physic', 'Физик'), max_length=20, verbose_name='Статус клиента')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник компании')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный пользователь')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
